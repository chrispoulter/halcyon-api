name: Preview Build and Deploy

on:
    push:
        branches: ['feature/**', 'bugfix/**']
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4

            - name: Build and test
              run: |
                  dotnet restore
                  dotnet build --no-restore
                  dotnet test --no-build --verbosity normal

    build-docker:
        runs-on: ubuntu-latest
        needs: build
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v0
              with:
                  versionSpec: '5.x'

            - name: Determine Version
              id: gitversion
              uses: gittools/actions/gitversion/execute@v0
              with:
                  useConfigFile: true
                  additionalArguments: '/updateprojectfiles'

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub container registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ github.token }}

            - name: Lowercase the repo name and username
              run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

            - name: Build and push container image to registry
              uses: docker/build-push-action@v5
              with:
                  file: ./src/Halcyon.Api/Dockerfile
                  tags: |
                      ghcr.io/${{ env.REPO }}:${{ steps.gitversion.outputs.semVer }}
                      ghcr.io/${{ env.REPO }}:preview
                  context: .
                  push: true
                  provenance: false

    deploy-azure:
        runs-on: ubuntu-latest
        needs: build-docker
        environment:
            name: Preview
            url: ${{ vars.URL }}

        steps:
            - name: Deploy to Coolify
              run: |
                  curl --request GET '${{ secrets.COOLIFY_WEBHOOK }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'
